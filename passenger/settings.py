"""
Django settings for passenger project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""


from pathlib import Path
import os
from datetime import timedelta
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!


# Initialize environment variables

env = environ.Env()
env_path = os.path.join(os.path.dirname(__file__), ".env")
environ.Env.read_env(env_path)

SECRET_KEY = env("SECRET_KEY")  # Read from .env
# DEBUG = env.bool("DEBUG", default=False)


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['54.254.116.86',
                 'www.passenger.lk',
                 'www.passenger.work.gd',
                 'passenger.work.gd',
                 'passenger.lk']


# Application definition

INSTALLED_APPS = [
    'rest_framework',
    'rest_framework_simplejwt',
    'whitenoise.runserver_nostatic',
    'rest_framework_simplejwt.token_blacklist',
    'members',
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'busstops',
    'booking',
    'conductor',
    'live_location',
    'machine',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'passenger.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'passenger.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'passenger_database',
        'USER': 'admin',
        'HOST': 'passengerdb.cn2mucy26tr9.ap-southeast-1.rds.amazonaws.com',
        'PORT': '3306',
        'PASSWORD': 'A0763003258z'
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Colombo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [

    os.path.join(BASE_DIR, 'static')
]

MEDIA_URL = '/media/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


JAZZMIN_SETTINGS = {
    "custom_css": "css/custom_admin.css",
    "site_title": "Passenger Admin",
    "site_header": "Passenger Admin",
    "site_brand": "Passenger",
    # "site_logo": "yourapp/logo.png",  # Replace with the path to your logo in the static directory
    "login_logo": None,
    "login_logo_dark": None,
    "site_logo_classes": "img-circle",
    "welcome_sign": "Welcome to Passenger Admin",
    "copyright": "Passenger Inc.",
    # Change to your relevant searchable model
    "search_model": "app_name.BoardingPoint",
    "user_avatar": None,

    # Customizations
    "show_sidebar": True,
    "navigation_expanded": True,
    "order_with_respect_to": ["auth", "app_name", "app_name.BoardingPoints", "app_name.BusRoute"],

    # Top menu links
    "topmenu_links": [
        {"name": "Home", "url": "admin:index",
            "permissions": ["auth.view_user"]},
        {"name": "Docs", "url": "https://docs.djangoproject.com/en/4.0/",
            "new_window": True},
    ],

    # Side menu icons
    "icons": {
        "auth": "fas fa-users-cog",
        "app_name.BusRoute": "fas fa-road",
        "app_name.BoardingPoints": "fas fa-map-marker-alt",
    },

    # Themes
    # Change this to try different themes (options: cerulean, cosmo, cyborg, etc.)
    "theme": "cyborg",
    "dark_mode_theme": None,  # Set a dark mode theme if needed
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DATETIME_FORMAT': '%Y-%m-%d %H:%M:%S',  # Optional: customize date/time format
    'TIME_ZONE': 'Asia/Colombo',  # Ensures DRF respects this time zone
}

AUTH_USER_MODEL = "members.User"


SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=60),  # Token expires in 1 hour
    # Refresh token expires in 7 days
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
    "ROTATE_REFRESH_TOKENS": True,  # Rotates refresh token on every request
    "BLACKLIST_AFTER_ROTATION": True,  # Blacklist old refresh token
    "AUTH_HEADER_TYPES": ("Bearer",),  # Authorization: Bearer <token>
}


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'fission.web.studio@gmail.com'
EMAIL_HOST_PASSWORD = 'kvvy fpvq ckfy wofa'
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False


CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        # Redis server location
        'LOCATION': 'redis://:YM4OWUDyJZ3GAFsZMvmXSvfrJveY18bg@redis-18645.c81.us-east-1-2.ec2.redns.redis-cloud.com:18645/0',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        },
    }
}
